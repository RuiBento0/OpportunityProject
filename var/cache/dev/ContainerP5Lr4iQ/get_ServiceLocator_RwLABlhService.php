<?php

namespace ContainerP5Lr4iQ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_RwLABlhService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.rwLABlh' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.rwLABlh'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\AccountsController::list' => ['privates', '.service_locator.WX6edlh', 'get_ServiceLocator_WX6edlhService', true],
            'App\\Controller\\AccountsController::new' => ['privates', '.service_locator.WX6edlh', 'get_ServiceLocator_WX6edlhService', true],
            'App\\Controller\\ContactsController::list' => ['privates', '.service_locator.3_A.QSe', 'get_ServiceLocator_3A_QSeService', true],
            'App\\Controller\\ContactsController::new' => ['privates', '.service_locator.3_A.QSe', 'get_ServiceLocator_3A_QSeService', true],
            'App\\Controller\\LeadsController::list' => ['privates', '.service_locator.R3NbhXz', 'get_ServiceLocator_R3NbhXzService', true],
            'App\\Controller\\LeadsController::new' => ['privates', '.service_locator.R3NbhXz', 'get_ServiceLocator_R3NbhXzService', true],
            'App\\Controller\\MailerController::sendEmail' => ['privates', '.service_locator.CpaXrFh', 'get_ServiceLocator_CpaXrFhService', true],
            'App\\Controller\\MailerController::sendEmail2' => ['privates', '.service_locator.gvsgc.U', 'get_ServiceLocator_Gvsgc_UService', true],
            'App\\Controller\\OpportunitiesController::list' => ['privates', '.service_locator.v5preZg', 'get_ServiceLocator_V5preZgService', true],
            'App\\Controller\\OpportunitiesController::new' => ['privates', '.service_locator.v5preZg', 'get_ServiceLocator_V5preZgService', true],
            'App\\Controller\\RegistrationController::register' => ['privates', '.service_locator.e6b0BD8', 'get_ServiceLocator_E6b0BD8Service', true],
            'App\\Controller\\ResetPasswordController::request' => ['privates', '.service_locator.CpaXrFh', 'get_ServiceLocator_CpaXrFhService', true],
            'App\\Controller\\ResetPasswordController::reset' => ['privates', '.service_locator.SxWgT3I', 'get_ServiceLocator_SxWgT3IService', true],
            'App\\Controller\\SecurityController::login' => ['privates', '.service_locator.UDgw6Ol', 'get_ServiceLocator_UDgw6OlService', true],
            'App\\Controller\\SecurityController::loginwithtoken' => ['privates', '.service_locator.UDgw6Ol', 'get_ServiceLocator_UDgw6OlService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Controller\\AccountsController:list' => ['privates', '.service_locator.WX6edlh', 'get_ServiceLocator_WX6edlhService', true],
            'App\\Controller\\AccountsController:new' => ['privates', '.service_locator.WX6edlh', 'get_ServiceLocator_WX6edlhService', true],
            'App\\Controller\\ContactsController:list' => ['privates', '.service_locator.3_A.QSe', 'get_ServiceLocator_3A_QSeService', true],
            'App\\Controller\\ContactsController:new' => ['privates', '.service_locator.3_A.QSe', 'get_ServiceLocator_3A_QSeService', true],
            'App\\Controller\\LeadsController:list' => ['privates', '.service_locator.R3NbhXz', 'get_ServiceLocator_R3NbhXzService', true],
            'App\\Controller\\LeadsController:new' => ['privates', '.service_locator.R3NbhXz', 'get_ServiceLocator_R3NbhXzService', true],
            'App\\Controller\\MailerController:sendEmail' => ['privates', '.service_locator.CpaXrFh', 'get_ServiceLocator_CpaXrFhService', true],
            'App\\Controller\\MailerController:sendEmail2' => ['privates', '.service_locator.gvsgc.U', 'get_ServiceLocator_Gvsgc_UService', true],
            'App\\Controller\\OpportunitiesController:list' => ['privates', '.service_locator.v5preZg', 'get_ServiceLocator_V5preZgService', true],
            'App\\Controller\\OpportunitiesController:new' => ['privates', '.service_locator.v5preZg', 'get_ServiceLocator_V5preZgService', true],
            'App\\Controller\\RegistrationController:register' => ['privates', '.service_locator.e6b0BD8', 'get_ServiceLocator_E6b0BD8Service', true],
            'App\\Controller\\ResetPasswordController:request' => ['privates', '.service_locator.CpaXrFh', 'get_ServiceLocator_CpaXrFhService', true],
            'App\\Controller\\ResetPasswordController:reset' => ['privates', '.service_locator.SxWgT3I', 'get_ServiceLocator_SxWgT3IService', true],
            'App\\Controller\\SecurityController:login' => ['privates', '.service_locator.UDgw6Ol', 'get_ServiceLocator_UDgw6OlService', true],
            'App\\Controller\\SecurityController:loginwithtoken' => ['privates', '.service_locator.UDgw6Ol', 'get_ServiceLocator_UDgw6OlService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
        ], [
            'App\\Controller\\AccountsController::list' => '?',
            'App\\Controller\\AccountsController::new' => '?',
            'App\\Controller\\ContactsController::list' => '?',
            'App\\Controller\\ContactsController::new' => '?',
            'App\\Controller\\LeadsController::list' => '?',
            'App\\Controller\\LeadsController::new' => '?',
            'App\\Controller\\MailerController::sendEmail' => '?',
            'App\\Controller\\MailerController::sendEmail2' => '?',
            'App\\Controller\\OpportunitiesController::list' => '?',
            'App\\Controller\\OpportunitiesController::new' => '?',
            'App\\Controller\\RegistrationController::register' => '?',
            'App\\Controller\\ResetPasswordController::request' => '?',
            'App\\Controller\\ResetPasswordController::reset' => '?',
            'App\\Controller\\SecurityController::login' => '?',
            'App\\Controller\\SecurityController::loginwithtoken' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\AccountsController:list' => '?',
            'App\\Controller\\AccountsController:new' => '?',
            'App\\Controller\\ContactsController:list' => '?',
            'App\\Controller\\ContactsController:new' => '?',
            'App\\Controller\\LeadsController:list' => '?',
            'App\\Controller\\LeadsController:new' => '?',
            'App\\Controller\\MailerController:sendEmail' => '?',
            'App\\Controller\\MailerController:sendEmail2' => '?',
            'App\\Controller\\OpportunitiesController:list' => '?',
            'App\\Controller\\OpportunitiesController:new' => '?',
            'App\\Controller\\RegistrationController:register' => '?',
            'App\\Controller\\ResetPasswordController:request' => '?',
            'App\\Controller\\ResetPasswordController:reset' => '?',
            'App\\Controller\\SecurityController:login' => '?',
            'App\\Controller\\SecurityController:loginwithtoken' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
