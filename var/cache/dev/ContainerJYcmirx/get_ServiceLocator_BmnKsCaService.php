<?php

namespace ContainerJYcmirx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_BmnKsCaService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.bmnKsCa' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.bmnKsCa'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'entityManager' => ['privates', '.errored.ISsV3qS', NULL, 'Cannot determine controller argument for "App\\Controller\\SecurityController::register()": the $entityManager argument is type-hinted with the non-existent class or interface: "App\\Controller\\EntityManagerInterface". Did you forget to add a use statement?'],
            'mailer' => ['privates', '.errored.paPPCyT', NULL, 'Cannot determine controller argument for "App\\Controller\\SecurityController::register()": the $mailer argument is type-hinted with the non-existent class or interface: "App\\Controller\\MailerInterface". Did you forget to add a use statement?'],
            'request' => ['privates', '.errored.Du4jWMt', NULL, 'Cannot determine controller argument for "App\\Controller\\SecurityController::register()": the $request argument is type-hinted with the non-existent class or interface: "App\\Controller\\Request". Did you forget to add a use statement?'],
            'userPasswordHasher' => ['privates', '.errored.n.tTe3L', NULL, 'Cannot determine controller argument for "App\\Controller\\SecurityController::register()": the $userPasswordHasher argument is type-hinted with the non-existent class or interface: "App\\Controller\\UserPasswordHasherInterface". Did you forget to add a use statement?'],
        ], [
            'entityManager' => '?',
            'mailer' => '?',
            'request' => '?',
            'userPasswordHasher' => '?',
        ]);
    }
}
